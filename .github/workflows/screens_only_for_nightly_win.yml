name: Screens Only

on:
  workflow_dispatch:
    inputs:
      version:
        description: dummy
        default: dummy

defaults:
  run:
    shell: bash

jobs:
  windows-test:
    runs-on: windows-latest
    if: ${{ true }}
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - name: Display the path
        run: echo %PATH%
        shell: cmd

      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin' # See 'Supported distributions' for available options
          java-version: '17'

      - name: java-version
        run: java -version
        shell: bash

      - name: download tester
        shell: bash
        run: |
             curl -L https://github.com/zoff99/java_tox_tester/archive/refs/heads/master.zip -o master.zip
             unzip master.zip
             ls -al java_tox_tester-master/
             java -version
             javac -version

      - name: compile-app
        shell: bash
        run: |
          ./gradlew.bat assemble

      - name: startup-app
        shell: pwsh
        run: |
          [void] [System.Reflection.Assembly]::LoadWithPartialName("System.Drawing")
          [void] [System.Reflection.Assembly]::LoadWithPartialName("System.Windows.Forms")
          Start-Sleep -Seconds 30
          Start-Process -FilePath 'C:\Windows\System32\cmd.exe' -WorkingDirectory "D:\a\trifa_material\trifa_material" -ArgumentList '/c', 'D:\a\trifa_material\trifa_material\gradlew.bat', "run" -windowstyle Maximized
          Start-Sleep -Seconds 20
          Start-Sleep -Seconds 8
          $signature=@'
          [DllImport("user32.dll",CharSet=CharSet.Auto,CallingConvention=CallingConvention.StdCall)]
          public static extern void mouse_event(long dwFlags, long dx, long dy, long cButtons, long dwExtraInfo);
          '@
          $SendMouseClick = Add-Type -memberDefinition $signature -name "Win32MouseEventNew" -namespace Win32Functions -passThru
          $x = 84
          $y = 104
          [System.Windows.Forms.Cursor]::Position = New-Object System.Drawing.Point($x, $y)
          sleep -Seconds 02
          $SendMouseClick::mouse_event(0x00000002, 0, 0, 0, 0);
          $SendMouseClick::mouse_event(0x00000004, 0, 0, 0, 0);
          sleep -Seconds 02
          $x = 146
          $y = 104
          [System.Windows.Forms.Cursor]::Position = New-Object System.Drawing.Point($x, $y)
          $SendMouseClick::mouse_event(0x00000002, 0, 0, 0, 0);
          $SendMouseClick::mouse_event(0x00000004, 0, 0, 0, 0);
          Start-Sleep -Seconds 2

      - name: start tester
        shell: bash
        run: |
          cat toxid.txt;echo
          cd java_tox_tester-master
          bash -x ./do_compile.sh
          ./do_run.sh $(cat ../toxid.txt) &
          sleep 180

      - name: startup-app
        shell: pwsh
        run: |
          [void] [System.Reflection.Assembly]::LoadWithPartialName("System.Drawing")
          [void] [System.Reflection.Assembly]::LoadWithPartialName("System.Windows.Forms")
          $signature=@'
          [DllImport("user32.dll",CharSet=CharSet.Auto,CallingConvention=CallingConvention.StdCall)]
          public static extern void mouse_event(long dwFlags, long dx, long dy, long cButtons, long dwExtraInfo);
          '@
          $SendMouseClick = Add-Type -memberDefinition $signature -name "Win32MouseEventNew" -namespace Win32Functions -passThru
          $x = 215
          $y = 325
          [System.Windows.Forms.Cursor]::Position = New-Object System.Drawing.Point($x, $y)
          sleep -Seconds 02
          $SendMouseClick::mouse_event(0x00000002, 0, 0, 0, 0);
          $SendMouseClick::mouse_event(0x00000004, 0, 0, 0, 0);
          sleep -Seconds 02
          $x = 735
          $y = 613
          [System.Windows.Forms.Cursor]::Position = New-Object System.Drawing.Point($x, $y)
          sleep -Seconds 02
          $SendMouseClick::mouse_event(0x00000002, 0, 0, 0, 0);
          $SendMouseClick::mouse_event(0x00000004, 0, 0, 0, 0);
          sleep -Seconds 02

      - name: capture-screen
        shell: pwsh
        run: |
          Add-Type -AssemblyName System.Windows.Forms
          Add-Type -AssemblyName System.Drawing
          $Screen = [System.Windows.Forms.SystemInformation]::VirtualScreen
          $Width  = $Screen.Width
          $Height = $Screen.Height
          $Left   = $Screen.Left
          $Top    = $Screen.Top
          $bitmap  = New-Object System.Drawing.Bitmap $Width, $Height
          $graphic = [System.Drawing.Graphics]::FromImage($bitmap)
          $graphic.CopyFromScreen($Left, $Top, 0, 0, $bitmap.Size)
          $bitmap.Save("D:\a\trifa_material\trifa_material\screenshot-windows.png")
          Write-Output "Screenshot saved to:"
          Write-Output D:\a\trifa_material\trifa_material\screenshot-windows.png

      - name: upload-screenshots
        uses: actions/upload-artifact@v4
        with:
          name: screenshot-windows
          path: |
            D:\a\trifa_material\trifa_material\screenshot-windows.png

      - name: Upload to nightly release
        uses: ncipollo/release-action@v1
        if: github.ref == 'refs/heads/master'
        with:
          allowUpdates: true
          tag: nightly
          omitBodyDuringUpdate: true
          omitNameDuringUpdate: true
          prerelease: true
          replacesArtifacts: true
          token: ${{ secrets.GITHUB_TOKEN }}
          artifacts: "screenshot-windows.png"



